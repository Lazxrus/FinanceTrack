Learn Flask, APIs and SQL
    Flask: web framework, HTTP request handler, can use partially as frontend content
    Flask - SQLAlchemy: Object Relational Mapper, aids interaction with an SQL db
    Flask - Migrate: Aids database migration
    Flask - RESTful: Provides tool for building APIs quickly
    Flask - Blueprint: Lets you split code into modules to avoid circular imports
    API: 
    SQL:

Filtering, so we only get certain categories
Sorting, so it shows transaction by certain parameters(amount, dates)

Learn how to use MongoDB

Learn Python for backend
    Data-handling:
    Automation:

Improve GitHub page with a better ReadME.
    Add images
    Add a portfolio project

Create a portfolio.
    HTML
    CSS/Bootstrap: Starting frontend
    JavaScript: main.js runs in browser so we use relative paths instead of URLs
    Python
    SQL
    JQuery

app.py → Entry point for the application.

models.py → Defines database tables.

routes.py → Handles API requests.

templates/ and static/ → For frontend (optional).

Invoke-WebRequest -Uri "http://127.0.0.1:5000/api/transactions" -Method GET
Invoke-WebRequest -Uri "http://127.0.0.1:5000/api/transactions?category=Food" -Method GET

Invoke-WebRequest -Uri "http://127.0.0.1:5000/api/transactions" `
    -Method POST `
    -ContentType "application/json" `
    -Body '{"description": "Coffee", "amount": 5, "category": "Food"}' //This gets changed
